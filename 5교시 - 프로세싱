# 사각형 그리기

```java
void setup()
{
  size(600,400);
  background(255);
}

void draw()
{
  background(255);
  
  rect(100,100,100,100);  //사각형 그리기
  
}
```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/43f4c680-a7ab-4f2d-b233-d37ec40472ce/e04f20f2-94e9-4753-b392-e5ccb24bb118/Untitled.png)

# 사각형 색상 채우기

```java
void setup()
{
  size(600,400);
  background(255);
}

void draw()
{
  background(255);
  
  fill(255,100,0); //색상 채우기
  rect(100,100,100,100);  //사각형 그리기
  
}
```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/43f4c680-a7ab-4f2d-b233-d37ec40472ce/4729ebb1-14a4-4c48-b0cb-dbd02f23f47e/Untitled.png)

# 사각형을 중앙을 기준으로 그리기

```java
void setup()
{
  size(600,400);
  background(255);
}

void draw()
{
  background(255);
  rectMode(CENTER);  //중앙을 기준으로 도형을 그린다.
  fill(255,100,0); //색상 채우기
  rect(100,100,100,100);  //사각형 그리기
  println(mouseX, mouseY);
}
```

# 사각형을 모서리를 기준으로 그리기

```java
void setup()
{
  size(600,400);
  background(255);
}

void draw()
{
  background(255);
  // rectMode(CENTER);  //중앙을 기준으로 도형을 그린다.
  rectMode(CORNER);  // 모서리를 기준으로 도형을 그린다.
  fill(255,100,0); //색상 채우기
  rect(100,100,100,100);  //사각형 그리기
  println(mouseX, mouseY);
}
```

# 사각형 ver2.

```java
void setup()
{
  size(600,400);
  background(255);
}

void draw()
{
  background(255);
  rectMode(CENTER);  //중앙을 기준으로 도형을 그린다.
  // rectMode(CORNER);  // 모서리를 기준으로 도형을 그린다.
  fill(255,255,255); //색상 채우기
  rect(100,100,50,50);  //사각형 그리기
  // println(mouseX, mouseY);
}

void mousePressed()
{
  if((mouseX >= 50) && (mouseX <= 150) &&(mouseY >= 50) &&(mouseY <= 150))
  {
    println("Mouse Button Cliked in the Rectangle");
  }
  else
  {
    println(mouseX, mouseY);
  }
  delay(100);
}
```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/43f4c680-a7ab-4f2d-b233-d37ec40472ce/e516355e-76b9-4cd6-915e-edf531aafc09/Untitled.png)

# 사각형 2개

```java
void setup()
{
  size(600,400);
  background(255);
}

void draw()
{
  background(255);
  rectMode(CENTER);  //중앙을 기준으로 도형을 그린다.
  // rectMode(CORNER);  // 모서리를 기준으로 도형을 그린다.
  fill(255,0,0); //색상 채우기
  rect(300,200,50,50);  //사각형 그리기
  
  fill(255,255,255); //색상 채우기
  rect(300,150,50,50);  //사각형 그리기
}

void mousePressed()
{
  if((mouseX >= 50) && (mouseX <= 150) &&(mouseY >= 50) &&(mouseY <= 150))
  {
    println("Mouse Button Cliked in the Rectangle");
  }
  else
  {
    println(mouseX, mouseY);
  }
  delay(100);
}
```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/43f4c680-a7ab-4f2d-b233-d37ec40472ce/b166ecdf-92b6-4642-a6af-6d79896526e6/Untitled.png)

# 사각형 3개

```java
void setup()
{
  size(600,400);
  background(255);
}

void draw()
{
  background(255);
  rectMode(CENTER);  //중앙을 기준으로 도형을 그린다.
  // rectMode(CORNER);  // 모서리를 기준으로 도형을 그린다.
  fill(255,0,0); //색상 채우기
  rect(300,200,50,50);  //사각형 그리기
  
  // 전진을 위한 버튼
  fill(255,255,255); //색상 채우기
  rect(300,150,50,50);  //사각형 그리기
  
  // 후진을 위한 버튼
  fill(255,255,255); //색상 채우기
  rect(300,250,50,50);  //사각형 그리기
}

void mousePressed()
{
  if((mouseX >= 50) && (mouseX <= 150) &&(mouseY >= 50) &&(mouseY <= 150))
  {
    println("Mouse Button Cliked in the Rectangle");
  }
  else
  {
    println(mouseX, mouseY);
  }
  delay(100);
}
```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/43f4c680-a7ab-4f2d-b233-d37ec40472ce/db414cd9-5de5-492e-b5a0-8634f3cd43e3/Untitled.png)

# GO 버튼

```java
void setup()
{
  size(600,400);
  background(255);
}

void draw()
{
  background(255);
  rectMode(CENTER);  //중앙을 기준으로 도형을 그린다.
  // rectMode(CORNER);  // 모서리를 기준으로 도형을 그린다.
  fill(255,0,0); //색상 채우기
  rect(300,200,50,50);  //사각형 그리기
  
  // 전진을 위한 버튼
  fill(255,255,255); //색상 채우기
  rect(300,150,50,50);  //사각형 그리기
  
  // 후진을 위한 버튼
  fill(255,255,255); //색상 채우기
  rect(300,250,50,50);  //사각형 그리기
}

void mousePressed()
{
  if((mouseX >= 275) && (mouseX <= 325) &&(mouseY >= 125) && (mouseY <= 175))
  {
    println("GO");
  }
  else
  {
    println(mouseX, mouseY);
  }
  delay(100);
}
```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/43f4c680-a7ab-4f2d-b233-d37ec40472ce/1d9990ff-c463-4237-a45b-e8b52c18c60b/Untitled.png)

# GO, BACK 버튼

```java
void setup()
{
  size(600,400);
  background(255);
}

void draw()
{
  background(255);
  rectMode(CENTER);  //중앙을 기준으로 도형을 그린다.
  // rectMode(CORNER);  // 모서리를 기준으로 도형을 그린다.
  fill(255,0,0); //색상 채우기
  rect(300,200,50,50);  //사각형 그리기
  
  // 전진을 위한 버튼
  fill(255,255,255); //색상 채우기
  rect(300,150,50,50);  //사각형 그리기
  
  // 후진을 위한 버튼
  fill(255,255,255); //색상 채우기
  rect(300,250,50,50);  //사각형 그리기
}

void mousePressed()
{
  if((mouseX >= 275) && (mouseX <= 325) &&(mouseY >= 125) && (mouseY <= 175))
  {
    println("GO");
  }
  else if((mouseX >= 275) && (mouseX <= 325) && (mouseY >= 225) && (mouseY <= 275))
  {
    println("BACK");
  }
  else
  {
    println(mouseX, mouseY);
  }
  delay(100);
}
```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/43f4c680-a7ab-4f2d-b233-d37ec40472ce/5f570b91-32ef-4c47-8782-b93b89528fce/Untitled.png)

# GO, STOP, BACK 버튼

```java
**void setup()
{
  size(600,400);
  background(255);
}

void draw()
{
  background(255);
  rectMode(CENTER);  //중앙을 기준으로 도형을 그린다.
  // rectMode(CORNER);  // 모서리를 기준으로 도형을 그린다.
  fill(255,0,0); //색상 채우기
  rect(300,200,50,50);  //사각형 그리기
  
  // 전진을 위한 버튼
  fill(255,255,255); //색상 채우기
  rect(300,150,50,50);  //사각형 그리기
  
  // 후진을 위한 버튼
  fill(255,255,255); //색상 채우기
  rect(300,250,50,50);  //사각형 그리기
}

void mousePressed()
{
  if((mouseX >= 275) && (mouseX <= 325) &&(mouseY >= 125) && (mouseY <= 175))
  {
    println("GO");
  }
  else if((mouseX >= 275) && (mouseX <= 325) && (mouseY >= 225) && (mouseY <= 275))
  {
    println("BACK");
  }
   else if((mouseX >= 275) && (mouseX <= 325) && (mouseY >= 175) && (mouseY <= 225))
  {
    println("STOP");
  }
  else
  {
    println(mouseX, mouseY);
  }
  delay(100);
}**
```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/43f4c680-a7ab-4f2d-b233-d37ec40472ce/22c78c91-dd0d-47fb-96b3-455cd5851b24/Untitled.png)

# 버튼 파란색으로 채우기

```java
void setup()
{
  size(600,400);
  background(255);
  rectMode(CENTER);  //중앙을 기준으로 도형을 그린다.
  // rectMode(CORNER);  // 모서리를 기준으로 도형을 그린다
  background(255);
  fill(255,0,0); //색상 채우기
  rect(300,200,50,50);  //사각형 그리기
  
  // 전진을 위한 버튼
  fill(255,255,255); //색상 채우기
  rect(300,150,50,50);  //사각형 그리기
  
  // 후진을 위한 버튼
  fill(255,255,255); //색상 채우기
  rect(300,250,50,50);  //사각형 그리기
}

void draw()
{
  
  
}

void mousePressed()
{
  if((mouseX >= 275) && (mouseX <= 325) &&(mouseY >= 125) && (mouseY <= 175))
  {
    println("GO");
    fill(0,0,255); //색상 채우기
    rect(300,150,50,50);  //사각형 그리기
  }
  else if((mouseX >= 275) && (mouseX <= 325) && (mouseY >= 225) && (mouseY <= 275))
  {
    println("BACK");
  }
   else if((mouseX >= 275) && (mouseX <= 325) && (mouseY >= 175) && (mouseY <= 225))
  {
    println("STOP");
  }
  else
  {
    println(mouseX, mouseY);
  }
  delay(100);
}
```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/43f4c680-a7ab-4f2d-b233-d37ec40472ce/c2f6cfea-2671-4d14-89d5-e4444c742592/Untitled.png)

최종 코드

```java
import processing.serial.*;
Serial port;

String portName = null;
String Serial_Data_String = null;

void setup() {
  size(600, 400);
  background(255);
  rectMode(CENTER);  // 중앙을 기준으로 도형을 그린다.
  // rectMode(CORNER);  // 모서리를 기준으로 도형을 그린다
  display_button(0);
  
}

void setPortName(String name) {
  portName = name;
  port = new Serial(this, portName, 115200);
}

void send_serial_motor_command(int mode)
{
  switch(mode) {
    case 1:
      port.write("# "); port.write("M "); port.write("1 "); port.write("255"); port.write("*\n");
      break;
      
    case 0:
      port.write("# "); port.write("M "); port.write("0 "); port.write("0   "); port.write("*\n");
      break;
      
    case -1:
      port.write("# "); port.write("M "); port.write("-1 "); port.write("255"); port.write("*\n");
      break;
  }  
}

void display_button(int mode) {  // mode0: stop mode1: go  mode-1: back
  background(255);
  switch(mode) {
    case 1:
      fill(255, 255, 255); // 색상 채우기
      rect(300, 200, 50, 50);  // 사각형 그리기
      
      // 전진을 위한 버튼
      fill(0, 0, 255); // 색상 채우기
      rect(300, 150, 50, 50);  // 사각형 그리기
      
      // 후진을 위한 버튼
      fill(255, 255, 255); // 색상 채우기
      rect(300, 250, 50, 50);  // 사각형 그리기
      break;
      
    case 0:
      fill(255, 0, 0); // 색상 채우기
      rect(300, 200, 50, 50);  // 사각형 그리기
      
      // 전진을 위한 버튼
      fill(255, 255, 255); // 색상 채우기
      rect(300, 150, 50, 50);  // 사각형 그리기
      
      // 후진을 위한 버튼
      fill(255, 255, 255); // 색상 채우기
      rect(300, 250, 50, 50);  // 사각형 그리기
      break;
      
    case -1:
      fill(255, 255, 255); // 색상 채우기
      rect(300, 200, 50, 50);  // 사각형 그리기
      
      // 전진을 위한 버튼
      fill(255, 255, 255); // 색상 채우기
      rect(300, 150, 50, 50);  // 사각형 그리기
      
      // 후진을 위한 버튼
      fill(0, 255, 0); // 색상 채우기
      rect(300, 250, 50, 50);  // 사각형 그리기
      break;
  }
}

void draw() {
  // 빈 draw 함수 (여기서는 필요 없음)
}

void mousePressed() {
  if ((mouseX >= 275) && (mouseX <= 325) && (mouseY >= 125) && (mouseY <= 175)) {
    println("GO");
    display_button(1);
  } else if ((mouseX >= 275) && (mouseX <= 325) && (mouseY >= 225) && (mouseY <= 275)) {
    println("BACK");
    display_button(-1);
  } else if ((mouseX >= 275) && (mouseX <= 325) && (mouseY >= 175) && (mouseY <= 225)) {
    println("STOP");
    display_button(0);
  } else {
    println(mouseX, mouseY);
  }
  delay(100);
}

void serialEvent(Serial port) {
  Serial_Data_String = port.readStringUntil('\n');
  if (Serial_Data_String != null) {
    Serial_Data_String = trim(Serial_Data_String);
    println(Serial_Data_String);
  }
}

```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/43f4c680-a7ab-4f2d-b233-d37ec40472ce/dc7c05b8-c5ce-45af-ae0e-32fe88b7d218/Untitled.png)

# 디바이스 모니터링 스튜디오

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/43f4c680-a7ab-4f2d-b233-d37ec40472ce/d5b25070-37a4-41a6-aac1-d5a58848cf2f/Untitled.png)
